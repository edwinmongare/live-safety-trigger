/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    factories: Factory;
    smd_line_name: SmdLineName;
    SmdQuestions: SmdQuestion;
    pmd_lines: PmdLine;
    PMDQuestions: PMDQuestion;
    eng_lines: EngLine;
    ENGQuestions: ENGQuestion;
    FMD_Lines: FMD_Line;
    FMDQuestions: FMDQuestion;
    Engineering_Quality_Inspection: Engineering_Quality_Inspection;
    FMD_Quality_Inspection: FMD_Quality_Inspection;
    PMD_Quality_Inspection: PMD_Quality_Inspection;
    SMD_Quality_Inspection: SMD_Quality_Inspection;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name: string;
  role?: ('superadmin' | 'operator' | 'clerk') | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "factories".
 */
export interface Factory {
  id: string;
  factory_name: string;
  country: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "smd_line_name".
 */
export interface SmdLineName {
  id: string;
  smd_line_name: string;
  user?: (string | User)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SmdQuestions".
 */
export interface SmdQuestion {
  id: string;
  user?: (string | User)[] | null;
  Line: (string | SmdLineName)[];
  Q1: 'yes' | 'no';
  Q2: 'yes' | 'no';
  Q3: 'yes' | 'no';
  Q4: 'yes' | 'no';
  Q5: 'yes' | 'no';
  Q6: 'yes' | 'no';
  Q7: 'yes' | 'no';
  Q8: 'yes' | 'no';
  Q9: 'no' | 'yes';
  Q10: 'yes' | 'no';
  Q11: 'yes' | 'no';
  Q12: 'yes' | 'no';
  Q13: 'yes' | 'no';
  Q14: 'yes' | 'no';
  Q15: 'yes' | 'no';
  Q16: 'yes' | 'no';
  Q17: 'yes' | 'no';
  Q18: 'yes' | 'no';
  Trigger?: string | null;
  reasonForScore?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pmd_lines".
 */
export interface PmdLine {
  id: string;
  pmd_lines: string;
  user?: (string | User)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PMDQuestions".
 */
export interface PMDQuestion {
  id: string;
  user?: (string | User)[] | null;
  Line: (string | PmdLine)[];
  Q1: 'yes' | 'no';
  Q2: 'yes' | 'no';
  Q3: 'yes' | 'no';
  Q4: 'yes' | 'no';
  Q5: 'yes' | 'no';
  Q6: 'yes' | 'no';
  Q7: 'yes' | 'no';
  Q8: 'yes' | 'no';
  Q9: 'no' | 'yes';
  Q10: 'yes' | 'no';
  Q11: 'yes' | 'no';
  Q12: 'yes' | 'no';
  Q13: 'yes' | 'no';
  Q14: 'yes' | 'no';
  Q15: 'yes' | 'no';
  Q16: 'yes' | 'no';
  Q17: 'yes' | 'no';
  Q18: 'yes' | 'no';
  Trigger?: string | null;
  reasonForScore?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eng_lines".
 */
export interface EngLine {
  id: string;
  eng_lines: string;
  user?: (string | User)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ENGQuestions".
 */
export interface ENGQuestion {
  id: string;
  user?: (string | User)[] | null;
  Line: (string | EngLine)[];
  Q1: 'yes' | 'no';
  Q2: 'yes' | 'no';
  Q3: 'yes' | 'no';
  Q4: 'yes' | 'no';
  Q5: 'yes' | 'no';
  Q6: 'yes' | 'no';
  Q7: 'yes' | 'no';
  Q8: 'yes' | 'no';
  Q9: 'no' | 'yes';
  Q10: 'yes' | 'no';
  Q11: 'yes' | 'no';
  Q12: 'yes' | 'no';
  Q13: 'yes' | 'no';
  Q14: 'yes' | 'no';
  Q15: 'yes' | 'no';
  Q16: 'yes' | 'no';
  Q17: 'yes' | 'no';
  Q18: 'yes' | 'no';
  Trigger?: string | null;
  reasonForScore?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FMD_Lines".
 */
export interface FMD_Line {
  id: string;
  FMD_Lines: string;
  user?: (string | User)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FMDQuestions".
 */
export interface FMDQuestion {
  id: string;
  user?: (string | User)[] | null;
  Line: (string | FMD_Line)[];
  Q1: 'yes' | 'no';
  Q2: 'yes' | 'no';
  Q3: 'yes' | 'no';
  Q4: 'yes' | 'no';
  Q5: 'yes' | 'no';
  Q6: 'yes' | 'no';
  Q7: 'yes' | 'no';
  Q8: 'yes' | 'no';
  Q9: 'no' | 'yes';
  Q10: 'yes' | 'no';
  Q11: 'yes' | 'no';
  Q12: 'yes' | 'no';
  Q13: 'yes' | 'no';
  Q14: 'yes' | 'no';
  Q15: 'yes' | 'no';
  Q16: 'yes' | 'no';
  Q17: 'yes' | 'no';
  Q18: 'yes' | 'no';
  Trigger?: string | null;
  reasonForScore?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Engineering_Quality_Inspection".
 */
export interface Engineering_Quality_Inspection {
  id: string;
  user?: (string | User)[] | null;
  Line: (string | EngLine)[];
  Q1: 'yes' | 'no';
  Q2: 'yes' | 'no';
  Q3: 'yes' | 'no';
  Q4: 'yes' | 'no';
  Q5: 'yes' | 'no';
  Q6: 'yes' | 'no';
  Q7: 'yes' | 'no';
  Q8: 'yes' | 'no';
  Trigger?: string | null;
  reasonForScore?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FMD_Quality_Inspection".
 */
export interface FMD_Quality_Inspection {
  id: string;
  user?: (string | User)[] | null;
  Line: (string | FMD_Line)[];
  Q1: 'yes' | 'no';
  Q2: 'yes' | 'no';
  Q3: 'yes' | 'no';
  Q4: 'yes' | 'no';
  Q5: 'yes' | 'no';
  Q6: 'yes' | 'no';
  Q7: 'yes' | 'no';
  Q8: 'yes' | 'no';
  Trigger?: string | null;
  reasonForScore?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PMD_Quality_Inspection".
 */
export interface PMD_Quality_Inspection {
  id: string;
  user?: (string | User)[] | null;
  Line: (string | PmdLine)[];
  Q1: 'yes' | 'no';
  Q2: 'yes' | 'no';
  Q3: 'yes' | 'no';
  Q4: 'yes' | 'no';
  Q5: 'yes' | 'no';
  Q6: 'yes' | 'no';
  Q7: 'yes' | 'no';
  Q8: 'yes' | 'no';
  Trigger?: string | null;
  reasonForScore?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SMD_Quality_Inspection".
 */
export interface SMD_Quality_Inspection {
  id: string;
  user?: (string | User)[] | null;
  Line: (string | SmdLineName)[];
  Q1: 'yes' | 'no';
  Q2: 'yes' | 'no';
  Q3: 'yes' | 'no';
  Q4: 'yes' | 'no';
  Q5: 'yes' | 'no';
  Q6: 'yes' | 'no';
  Q7: 'yes' | 'no';
  Q8: 'yes' | 'no';
  Trigger?: string | null;
  reasonForScore?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}